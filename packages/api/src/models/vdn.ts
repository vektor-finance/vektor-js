/* tslint:disable */
/* eslint-disable */
/**
 * vektor
 * Vektor API
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { VDNErrorTypeEnum } from '.'
import { VDNAddress } from './vdnaddress'
import { VDNDecimal } from './vdndecimal'
import { VDNEither } from './vdneither'
import { VDNError } from './vdnerror'
import { VDNInteger } from './vdninteger'
import { VDNList } from './vdnlist'
import { VDNBoolean } from './vdnboolean'
import { VDNMap } from './vdnmap'
import { VDNSymbol } from './vdnsymbol'
import { VDNTask } from './vdntask'
import { VDNString } from './vdnstring'

export type VDNSuccess = { type: 'success'; value: VDN }

/**
 * @type VDN
 * VXL data notation
 * @export
 */
export type VDN =
  | VDNAddress
  | VDNDecimal
  | VDNEither
  // | VDNError
  | VDNInteger
  | VDNList
  | VDNBoolean
  | VDNMap
  | VDNSymbol
  | VDNTask
  | VDNString
  | VDNSuccess // TODO: Remove this type

export type VDNType = VDN['type']
export type VDNValue = VDN['value']

export const isVDN = (vdn: any): vdn is VDN => (vdn as VDN).type !== undefined && (vdn as VDN).value !== undefined

export const isVDNError = (vdn: any): vdn is VDNError => Object.values(VDNErrorTypeEnum).includes(vdn.type)
